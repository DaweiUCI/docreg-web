docreg-web {
   # custom dispatcher used by actors/futures for integration with non-actor systems (using locking), so that the default fork-join-pool dispatcher is not blocked
   custom.integration-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "thread-pool-executor"
      # Configuration for the thread pool
      thread-pool-executor {
         # minimum number of threads to cap factor-based core number to
         core-pool-size-min = 2
         # No of core threads ... ceil(available processors * factor)
         core-pool-size-factor = 2.0
         # maximum number of threads to cap factor-based number to
         core-pool-size-max = 10
         # Specifies the bounded capacity of the task queue (< 1 == unbounded)
         task-queue-size = -1
         # Hint: max-pool-size is only used for bounded task queues
         # minimum number of threads to cap factor-based max number to
         max-pool-size-min = 8
         # Max no of threads ... ceil(available processors * factor)
         max-pool-size-factor = 3.0
         # Max number of threads to cap factor-based max number to
         max-pool-size-max = 64
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 5
   }
   # custom dispatcher used by actors/futures for lengthy blocking io, so that the default fork-join-pool dispatcher is not blocked
   custom.blocking-io-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "thread-pool-executor"
      # Configuration for the thread pool
      thread-pool-executor {
         # minimum number of threads to cap factor-based core number to
         core-pool-size-min = 2
         # No of core threads ... ceil(available processors * factor)
         core-pool-size-factor = 2.0
         # maximum number of threads to cap factor-based number to
         core-pool-size-max = 10
         # Specifies the bounded capacity of the task queue (< 1 == unbounded)
         task-queue-size = -1
         # Hint: max-pool-size is only used for bounded task queues
         # minimum number of threads to cap factor-based max number to
         max-pool-size-min = 8
         # Max no of threads ... ceil(available processors * factor)
         max-pool-size-factor = 3.0
         # Max number of threads to cap factor-based max number to
         max-pool-size-max = 64
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 5
   }
   # custom pinned dispatcher (dedicates a unique thread for each actor using it; i.e. each actor will have its own thread pool with only one thread in the pool)
   custom.pinned-dispatcher {
      type = PinnedDispatcher
      executor = "thread-pool-executor"
   }
   akka {
      event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
      loglevel = "DEBUG"
   }
}
